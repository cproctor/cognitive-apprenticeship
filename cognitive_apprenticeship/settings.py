"""
Django settings for cognitive_apprenticeship project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$vcwg(&td71c*c!m+f!j@8&c700zyz0^e-nc%++8s%=)e%pp*g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',
    'django_distill',
    'roles', 
    'public', 
    'author',
    'reviewer',
    'editor',
    'common',
    'cp_utils',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cognitive_apprenticeship.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'cognitive_apprenticeship' / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cognitive_apprenticeship.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'formatters': {
        'json': {
            '()': 'json_log_formatter.JSONFormatter',
        }
    },  
    'handlers': {
        'analytics': {
            'class': 'logging.FileHandler',
            'level': 'INFO',
            'filename': 'analytics.log',
            'formatter': 'json'
        },
        'email': {
            'class': 'logging.FileHandler',
            'level': 'INFO',
            'filename': 'email.log',
            'formatter': 'json'
        },
    },
    'loggers': {
        'cognitive_apprenticeship.analytics': {
            'handlers': ['analytics'],
            'level': 'INFO',
            'propagate': True,
        },
        'cognitive_apprenticeship.email': {
            'handlers': ['email'],
            'level': 'INFO',
            'propagate': True,
        },
    }
}

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/New_York'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "static_root"
STATICFILES_DIRS = [
    BASE_DIR / 'cognitive_apprenticeship' / 'static',
]
TINYMCE_JS_URL = STATIC_URL + "/js/tinymce/tinymce.min.js"
#TINYMCE_JS_ROOT = str(STATIC_ROOT / "js" / "tinymce")
#TINYMCE_COMPRESSOR = False

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGOUT_REDIRECT_URL = '/'

TINYMCE_DEFAULT_CONFIG = {
    "theme": "silver",
    "height": 500,
    "menubar": False,
    "plugins": "advlist,autolink,lists,link,image,charmap,print,preview,anchor,"
    "searchreplace,visualblocks,code,fullscreen,insertdatetime,media,table,paste,"
    "code,help,wordcount,autosave",
    "toolbar": "undo redo | formatselect | "
    "bold italic backcolor | alignleft aligncenter "
    "alignright alignjustify | bullist numlist outdent indent | "
    "removeformat | help",
    "autosave_interval": "10s",
    "autosave_restore_when_empty": True,
}

JOURNAL_NAME = "LAI 615 Journal"
EDITOR_NAMES = "Dr. Chris Proctor"
DUE_DATE_HOUR = 1 # UTC
DAYS_TO_REVIEW = 6
DAYS_TO_EDIT_REVIEW = 3
DAYS_ON_EXTENSION = 1
NUMBER_OF_REVIEWERS = 2
AUTOMATICALLY_ASSIGN_REVIEWERS = True

SEND_JOURNAL_EMAIL = False
JOURNAL_EMAIL_SUBJECT_PREFIX = "[CISL Journal] "
JOURNAL_EMAIL_SENDER = "chris.proctor@gmail.com"
JOURNAL_EMAIL_BASE_URL = "https://cisljournal.net"

EMAIL_SUBJECT_PREFIX = "[CISL Journal] "

SITE_FROZEN = False
DISTILL_PUBLISH = {
    'default': {
        'ENGINE': 'django_distill.backends.amazon_s3',
        'PUBLIC_URL': 'https://cisljournal.net',
        'ACCESS_KEY_ID': '...',
        'SECRET_ACCESS_KEY': '...',
    }
}
